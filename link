#!/bin/bash

set -u

link_contents () {
    local path="$1"
    local home_path="$2"

    {
        find "$path" -type f -o -type d -mindepth 1 -maxdepth 1 | sed 's,^.*/,,'
        find "$home_path" -type f -o -type d -mindepth 1 -maxdepth 1 | sed 's,^.*/,,'
    } | sort -u | while read filename; do
        link "${path%/}/$filename" "${home_path%/}/$filename"
    done
}

link () {
    if [ "${2#Library/Containers/}" != "$2" ]; then
        # Do not create leading directories for containers links
        :
    else
        mkdir -p "$(dirname "$(abspath "$2")")"
    fi

    if [ -h "$2" ]; then
        rm -f "$2"
    fi

    iln -vrisb "$(abspath "$1")" "$(abspath "$2")" 2>&1 | grep -v "Same file as"
}

abspath () {
	_path="$1"
	if [ -n "${_path##/*}" ]; then
	    _path="$PWD/$1"
	fi
	echo "$_path"
}

process_rules () {
    local callback="$1"
    local path_pattern="$2"
    local home_path_pattern="$3"

    local ret=0
    grep -v "^#" | while IFS="	" read rel_path rel_home_path; do
        if [[ -z "$rel_path" ]]; then
            continue
        fi

        if [[ -z "$rel_home_path" ]]; then
            rel_home_path="$rel_path"
        fi

        path="$(printf "$path_pattern" "$rel_path")"
        home_path="$(printf "$home_path_pattern" "$rel_home_path")"

        "$callback" "$path" "$home_path" || ret=$?
    done
    return $ret
}


scriptdir="$(cd "$(dirname "$0")" && pwd)"
PATH=$scriptdir/iln:$PATH
cd

if [ ! -e "$scriptdir/iln" ]; then
    git clone https://github.com/kergoth/iln $scriptdir/iln
fi

process_rules link %s %s <$scriptdir/Links.txt
process_rules link_contents %s %s <$scriptdir/ContentsLinks.txt
